- hosts: localhost
  connection: local
  vars_files: 
   - vars/ansible_vars  
  tasks:
   - name: key for instance
     ec2_key:
            name: ashok_key1
            region: "{{region}}"
     register: ashok_ec2_info
       #   - debug:
       #     msg: "{{ashok_ec2_info}}"
   - name: copy pem key
     copy:
      content: "{{ashok_ec2_info.key.private_key}}"
      dest: "./ashok_key1.pem"
      mode: 0600   
     when: ashok_ec2_info.changed 
   - name: security grop
     ec2_group:
       description: allow all
       name: angible_sg1
       region: "{{region}}"
       rules:
         - proto: tcp
           from_port: 80
           to_port: 80
           cidr_ip: 0.0.0.0/0
         - proto: tcp
           from_port: 8080
           to_port: 8080
           cidr_ip: "{{office_ip}}"
         - proto: tcp
           from_port: 22
           to_port: 22
           cidr_ip: "{{office_ip}}"
         - proto: tcp
           from_port: 443
           to_port: 443
           cidr_ip: 0.0.0.0/0  
        # this should only be needed for EC2 Classic security group rules
        # because in a VPC an ELB will use a user-account security group
        #group_id: amazon-elb/sg-87654321/amazon-elb-sg
         - proto: tcp
           from_port: 3306
           to_port: 3306    
           cidr_ip: "{{office_ip}}"
     register: security_group
   - name: security grop
     ec2_group:
       description: allow all
       name: angible_sg1
       region: "{{region}}"
       rules:
         - proto: tcp
           from_port: 80
           to_port: 80
           cidr_ip: 0.0.0.0/0
         - proto: tcp
           from_port: 8080
           to_port: 8080
           cidr_ip: "{{office_ip}}"
         - proto: tcp
           from_port: 22
           to_port: 22
           cidr_ip: "{{office_ip}}"
         - proto: tcp
           from_port: 443
           to_port: 443
           cidr_ip: 0.0.0.0/0
        # this should only be needed for EC2 Classic security group rules
        # because in a VPC an ELB will use a user-account security group
        #group_id: amazon-elb/sg-87654321/amazon-elb-sg
         - proto: tcp
           from_port: 3306
           to_port: 3306
           cidr_ip: "{{office_ip}}"
         - proto: all
           group_id: "{{security_group.group_id}}"
   - debug:
        msg: "{{security_group}}"  
